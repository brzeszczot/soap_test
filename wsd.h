/* wsd.h
   Generated by wsdl2h 2.8.8 from MbsLookup.xml and typemap.dat
   2012-04-11 14:01:31 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2012 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on wsd.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.barnesandnobleinc.com/mbs/services/MbsLookup                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.barnesandnobleinc.com/mbs/services/MbsLookup"
ns2 = "http://xml.apache.org/xml-soap"
ns3 = "http://data.locator.bninc"
ns4 = "urn:MbsLookup"

*/

#define SOAP_NAMESPACE_OF_ns2	"http://xml.apache.org/xml-soap"
//gsoap ns2   schema namespace:	http://xml.apache.org/xml-soap
//gsoap ns2   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns3	"http://data.locator.bninc"
//gsoap ns3   schema namespace:	http://data.locator.bninc
//gsoap ns3   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns1	"http://www.barnesandnobleinc.com/mbs/services/MbsLookup"
//gsoap ns1   schema namespace:	http://www.barnesandnobleinc.com/mbs/services/MbsLookup
//gsoap ns1   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns4	"urn:MbsLookup"
//gsoap ns4   schema namespace:	urn:MbsLookup
//gsoap ns4   schema form:	unqualified
class xsd__anyType { _XML __item; struct soap *soap; };

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Class wrapper for built-in type "xs:boolean" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__boolean to check runtime type (see soapStub.h)
class xsd__boolean : public xsd__anyType
{ public:
    bool                                 __item;                       
};

/// Class wrapper for built-in type "xs:dateTime" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__dateTime to check runtime type (see soapStub.h)
class xsd__dateTime : public xsd__anyType
{ public:
    time_t                               __item;                       
};

/// Class wrapper for built-in type "xs:float" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__float to check runtime type (see soapStub.h)
class xsd__float : public xsd__anyType
{ public:
    float                                __item;                       
};

/// Class wrapper for built-in type "xs:int" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__int to check runtime type (see soapStub.h)
class xsd__int : public xsd__anyType
{ public:
    int                                  __item;                       
};

/// Class wrapper for built-in type "xs:long" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__long to check runtime type (see soapStub.h)
class xsd__long : public xsd__anyType
{ public:
    LONG64                               __item;                       
};

/// Class wrapper for built-in type "xs:string" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__string to check runtime type (see soapStub.h)
class xsd__string : public xsd__anyType
{ public:
    std::string                          __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns2__mapItem.
class ns2__mapItem;

//  Forward declaration of class ns2__Map.
class ns2__Map;

//  Forward declaration of class ns3__Contributor.
class ns3__Contributor;

//  Forward declaration of class ns3__EventMapping.
class ns3__EventMapping;

//  Forward declaration of class ns3__Event.
class ns3__Event;

//  Forward declaration of class ArrayOf_USCOREtns2_USCOREContributor.
class ArrayOf_USCOREtns2_USCOREContributor;

//  Forward declaration of class ArrayOf_USCOREtns1_USCOREProximity.
class ArrayOf_USCOREtns1_USCOREProximity;

//  Forward declaration of class ns4__Store.
class ns4__Store;

//  Forward declaration of class ns4__Proximity.
class ns4__Proximity;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://xml.apache.org/xml-soap                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://data.locator.bninc                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.barnesandnobleinc.com/mbs/services/MbsLookup                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:MbsLookup                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:MbsLookup                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://xml.apache.org/xml-soap                                           *
 *                                                                            *
\******************************************************************************/


/// "http://xml.apache.org/xml-soap":mapItem is a complexType.
class ns2__mapItem : public xsd__anyType
{ public:
/// Element key of type xs:string.
    std::string*                         key                           ;	///< Nullable pointer.
/// Element value of type xs:string.
    std::string*                         value                         ;	///< Nullable pointer.
};

/// "http://xml.apache.org/xml-soap":Map is a complexType.
class ns2__Map : public xsd__anyType
{ public:
/// Vector of ns2__mapItem* with length 0..unbounded
    std::vector<ns2__mapItem*          > item                           0;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://data.locator.bninc                                                *
 *                                                                            *
\******************************************************************************/


/// "http://data.locator.bninc":Contributor is a complexType.
class ns3__Contributor : public xsd__anyType
{ public:
/// Element firstName of type xs:string.
    std::string*                         firstName                     ;	///< Nullable pointer.
/// Element lastName of type xs:string.
    std::string*                         lastName                      ;	///< Nullable pointer.
};

/// "http://data.locator.bninc":EventMapping is a complexType.
class ns3__EventMapping : public xsd__anyType
{ public:
/// Element bksEventId of type xs:long.
    LONG64*                              bksEventId                    ;	///< Nullable pointer.
/// Element bnbnEventId of type xs:string.
    std::string*                         bnbnEventId                   ;	///< Nullable pointer.
/// Element externalId of type xs:long.
    LONG64*                              externalId                    ;	///< Nullable pointer.
/// Element externalSource of type xs:string.
    std::string*                         externalSource                ;	///< Nullable pointer.
/// Element key of type xs:anyType.
    xsd__anyType*                        key                           ;	///< Nullable pointer.
/// Element startDate of type xs:dateTime.
    time_t*                              startDate                     ;	///< Nullable pointer.
/// Element store of type xs:long.
    LONG64*                              store                         ;	///< Nullable pointer.
};

/// "http://data.locator.bninc":Event is a complexType.
class ns3__Event : public xsd__anyType
{ public:
/// Element calendarMap of type "http://xml.apache.org/xml-soap":Map.
    ns2__Map*                            calendarMap                   ;	///< Nullable pointer.
/// Element contributors of type "http://www.barnesandnobleinc.com/mbs/services/MbsLookup":ArrayOf_tns2_Contributor.
    ArrayOf_USCOREtns2_USCOREContributor*  contributors                  ;	///< Nullable pointer.
/// Element contributorsSet of type xs:anyType.
    xsd__anyType*                        contributorsSet               ;	///< Nullable pointer.
/// Element dotcomEvent of type "http://data.locator.bninc":EventMapping.
    ns3__EventMapping*                   dotcomEvent                   ;	///< Nullable pointer.
/// Element endDate of type xs:dateTime.
    time_t*                              endDate                       ;	///< Nullable pointer.
/// Element eventDetailParams of type "http://xml.apache.org/xml-soap":Map.
    ns2__Map*                            eventDetailParams             ;	///< Nullable pointer.
/// Element eventId of type xs:long.
    LONG64*                              eventId                       ;	///< Nullable pointer.
/// Element eventInfo of type xs:string.
    std::string*                         eventInfo                     ;	///< Nullable pointer.
/// Element eventName of type xs:string.
    std::string*                         eventName                     ;	///< Nullable pointer.
/// Element eventScheduleMsgFlag of type xs:string.
    std::string*                         eventScheduleMsgFlag          ;	///< Nullable pointer.
/// Element eventTypeForEventDetail of type xs:string.
    std::string*                         eventTypeForEventDetail       ;	///< Nullable pointer.
/// Element fullEventLocation of type xs:string.
    std::string*                         fullEventLocation             ;	///< Nullable pointer.
/// Element genre of type xs:string.
    std::string*                         genre                         ;	///< Nullable pointer.
/// Element imgPath of type xs:string.
    std::string*                         imgPath                       ;	///< Nullable pointer.
/// Element key of type xs:anyType.
    xsd__anyType*                        key                           ;	///< Nullable pointer.
/// Element markForDelete of type xs:string.
    std::string*                         markForDelete                 ;	///< Nullable pointer.
/// Element repeating of type xs:boolean.
    bool                                 repeating                      1;	///< Required element.
/// Element sku of type xs:string.
    std::string*                         sku                           ;	///< Nullable pointer.
/// Element skuType of type xs:int.
    int*                                 skuType                       ;	///< Nullable pointer.
/// Element startDate of type xs:dateTime.
    time_t*                              startDate                     ;	///< Nullable pointer.
/// Element store of type "urn:MbsLookup":Store.
    ns4__Store*                          store                         ;	///< Nullable pointer.
/// Element type of type xs:string.
    std::string*                         type                          ;	///< Nullable pointer.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.barnesandnobleinc.com/mbs/services/MbsLookup                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:MbsLookup                                                            *
 *                                                                            *
\******************************************************************************/


/// "urn:MbsLookup":Store is a complexType.
class ns4__Store : public xsd__anyType
{ public:
/// Element address1 of type xs:string.
    std::string*                         address1                      ;	///< Nullable pointer.
/// Element address2 of type xs:string.
    std::string*                         address2                      ;	///< Nullable pointer.
/// Element city of type xs:string.
    std::string*                         city                          ;	///< Nullable pointer.
/// Element closeDate of type xs:dateTime.
    time_t*                              closeDate                     ;	///< Nullable pointer.
/// Element division of type xs:string.
    std::string*                         division                      ;	///< Nullable pointer.
/// Element formattedOpenDate of type xs:string.
    std::string*                         formattedOpenDate             ;	///< Nullable pointer.
/// Element formattedStoreId of type xs:string.
    std::string*                         formattedStoreId              ;	///< Nullable pointer.
/// Element hours of type xs:string.
    std::string*                         hours                         ;	///< Nullable pointer.
/// Element key of type xs:anyType.
    xsd__anyType*                        key                           ;	///< Nullable pointer.
/// Element name of type xs:string.
    std::string*                         name                          ;	///< Nullable pointer.
/// Element openDate of type xs:dateTime.
    time_t*                              openDate                      ;	///< Nullable pointer.
/// Element openDateNote of type xs:string.
    std::string*                         openDateNote                  ;	///< Nullable pointer.
/// Element phone of type xs:string.
    std::string*                         phone                         ;	///< Nullable pointer.
/// Element quickDirections of type xs:string.
    std::string*                         quickDirections               ;	///< Nullable pointer.
/// Element state of type xs:string.
    std::string*                         state                         ;	///< Nullable pointer.
/// Element storeId of type xs:long.
    LONG64*                              storeId                       ;	///< Nullable pointer.
/// Element storeName of type xs:string.
    std::string*                         storeName                     ;	///< Nullable pointer.
/// Element zipcode of type xs:string.
    std::string*                         zipcode                       ;	///< Nullable pointer.
};

/// "urn:MbsLookup":Proximity is a complexType.
class ns4__Proximity : public xsd__anyType
{ public:
/// Element distance of type xs:float.
    float*                               distance                      ;	///< Nullable pointer.
/// Element event of type "http://data.locator.bninc":Event.
    ns3__Event*                          event                         ;	///< Nullable pointer.
/// Element store of type "urn:MbsLookup":Store.
    ns4__Store*                          store                         ;	///< Nullable pointer.
};

/// "http://www.barnesandnobleinc.com/mbs/services/MbsLookup":ArrayOf_tns2_Contributor is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "http://data.locator.bninc":Contributor
class ArrayOf_USCOREtns2_USCOREContributor : public xsd__anyType
{ public:
/// Pointer to array of ns3__Contributor*.
    ns3__Contributor*                   *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "http://www.barnesandnobleinc.com/mbs/services/MbsLookup":ArrayOf_tns1_Proximity is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:MbsLookup":Proximity
class ArrayOf_USCOREtns1_USCOREProximity : public xsd__anyType
{ public:
/// Pointer to array of ns4__Proximity*.
    ns4__Proximity*                     *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://xml.apache.org/xml-soap                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://xml.apache.org/xml-soap                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://data.locator.bninc                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://data.locator.bninc                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.barnesandnobleinc.com/mbs/services/MbsLookup                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.barnesandnobleinc.com/mbs/services/MbsLookup                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:MbsLookup                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:MbsLookup                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns5  service name:	MbsLookupSoapBinding 
//gsoap ns5  service type:	MbsLookup 
//gsoap ns5  service port:	http://www.barnesandnobleinc.com/mbs/services/MbsLookup 
//gsoap ns5  service namespace:	http://ws.locator.bninc 
//gsoap ns5  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref MbsLookupSoapBinding

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page MbsLookupSoapBinding Binding "MbsLookupSoapBinding"

@section MbsLookupSoapBinding_operations Operations of Binding  "MbsLookupSoapBinding"

  - @ref ns5__getStatus

  - @ref ns5__findStores

@section MbsLookupSoapBinding_ports Endpoints of Binding  "MbsLookupSoapBinding"

  - http://www.barnesandnobleinc.com/mbs/services/MbsLookup

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MbsLookupSoapBinding                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns5__getStatus                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns5__getStatus" of service binding "MbsLookupSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://www.barnesandnobleinc.com/mbs/services/MbsLookup/MbsLookup/getStatusRequest"

  - Addressing response action: "http://www.barnesandnobleinc.com/mbs/services/MbsLookup/MbsLookup/getStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns5__getStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    // response parameters:
    std::string                        &getStatusReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns5__getStatus(
    struct soap *soap,
    // request parameters:
    // response parameters:
    std::string                        &getStatusReturn
  );
@endcode

C++ proxy class (defined in soapMbsLookupSoapBindingProxy.h):
@code
  class MbsLookupSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMbsLookupSoapBindingService.h):
@code
  class MbsLookupSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	getStatus rpc
//gsoap ns5  service method-encoding:	getStatus http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns5  service method-action:	getStatus ""
//gsoap ns5  service method-output-action:	getStatus http://www.barnesandnobleinc.com/mbs/services/MbsLookup/MbsLookup/getStatusResponse
int ns5__getStatus(
    std::string                        &getStatusReturn	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns5__findStores                                                          *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns5__findStoresResponse" of service binding "MbsLookupSoapBinding" operation "ns5__findStores"
struct ns5__findStoresResponse
{
    ArrayOf_USCOREtns1_USCOREProximity* _findStoresReturn;
};

/// Operation "ns5__findStores" of service binding "MbsLookupSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://www.barnesandnobleinc.com/mbs/services/MbsLookup/MbsLookup/findStoresRequest"

  - Addressing response action: "http://www.barnesandnobleinc.com/mbs/services/MbsLookup/MbsLookup/findStoresResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns5__findStores(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         zipcode,
    // response parameters:
    struct ns5__findStoresResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns5__findStores(
    struct soap *soap,
    // request parameters:
    std::string                         zipcode,
    // response parameters:
    struct ns5__findStoresResponse&
  );
@endcode

C++ proxy class (defined in soapMbsLookupSoapBindingProxy.h):
@code
  class MbsLookupSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMbsLookupSoapBindingService.h):
@code
  class MbsLookupSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	findStores rpc
//gsoap ns5  service method-encoding:	findStores http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns5  service method-action:	findStores ""
//gsoap ns5  service method-output-action:	findStores http://www.barnesandnobleinc.com/mbs/services/MbsLookup/MbsLookup/findStoresResponse
int ns5__findStores(
    std::string                         _zipcode,	///< Request parameter
    struct ns5__findStoresResponse     &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns2 Top-level root elements of schema "http://xml.apache.org/xml-soap"

@section ns3 Top-level root elements of schema "http://data.locator.bninc"

@section ns1 Top-level root elements of schema "http://www.barnesandnobleinc.com/mbs/services/MbsLookup"

@section ns4 Top-level root elements of schema "urn:MbsLookup"

*/

/* End of wsd.h */
