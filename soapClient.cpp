/* soapClient.cpp
   Generated by gSOAP 2.8.23 from test.hpp

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.23 2015-11-06 13:32:36 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__AccountAuth(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string _email, std::string _pass, struct ns1__AccountAuthResponse &_param_1)
{	struct ns1__AccountAuth soap_tmp_ns1__AccountAuth;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://brzeszczot.net/open/server.php";
	if (soap_action == NULL)
		soap_action = "http://brzeszczot.net/open/AccountAuth";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__AccountAuth._email = _email;
	soap_tmp_ns1__AccountAuth._pass = _pass;
	soap_serializeheader(soap);
	soap_serialize_ns1__AccountAuth(soap, &soap_tmp_ns1__AccountAuth);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__AccountAuth(soap, &soap_tmp_ns1__AccountAuth, "ns1:AccountAuth", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__AccountAuth(soap, &soap_tmp_ns1__AccountAuth, "ns1:AccountAuth", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_1)
		return soap_closesock(soap);
	soap_default_ns1__AccountAuthResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__AccountAuthResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__SendWord(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string _word_USCOREa, std::string _word_USCOREb, std::string _lang_USCOREa, std::string _lang_USCOREb, struct ns1__SendWordResponse &_param_2)
{	struct ns1__SendWord soap_tmp_ns1__SendWord;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://brzeszczot.net/open/server.php";
	if (soap_action == NULL)
		soap_action = "http://brzeszczot.net/open/SendWord";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__SendWord._word_USCOREa = _word_USCOREa;
	soap_tmp_ns1__SendWord._word_USCOREb = _word_USCOREb;
	soap_tmp_ns1__SendWord._lang_USCOREa = _lang_USCOREa;
	soap_tmp_ns1__SendWord._lang_USCOREb = _lang_USCOREb;
	soap_serializeheader(soap);
	soap_serialize_ns1__SendWord(soap, &soap_tmp_ns1__SendWord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__SendWord(soap, &soap_tmp_ns1__SendWord, "ns1:SendWord", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__SendWord(soap, &soap_tmp_ns1__SendWord, "ns1:SendWord", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_2)
		return soap_closesock(soap);
	soap_default_ns1__SendWordResponse(soap, &_param_2);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__SendWordResponse(soap, &_param_2, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__GetWord(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string _range, stringArray *_opt, struct ns1__GetWordResponse &_param_3)
{	struct ns1__GetWord soap_tmp_ns1__GetWord;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://brzeszczot.net/open/server.php";
	if (soap_action == NULL)
		soap_action = "http://brzeszczot.net/open/GetWord";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__GetWord._range = _range;
	soap_tmp_ns1__GetWord._opt = _opt;
	soap_serializeheader(soap);
	soap_serialize_ns1__GetWord(soap, &soap_tmp_ns1__GetWord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetWord(soap, &soap_tmp_ns1__GetWord, "ns1:GetWord", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetWord(soap, &soap_tmp_ns1__GetWord, "ns1:GetWord", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_3)
		return soap_closesock(soap);
	soap_default_ns1__GetWordResponse(soap, &_param_3);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__GetWordResponse(soap, &_param_3, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__PlayWord(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, int _value, int _direction, struct ns1__PlayWordResponse &_param_4)
{	struct ns1__PlayWord soap_tmp_ns1__PlayWord;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://brzeszczot.net/open/server.php";
	if (soap_action == NULL)
		soap_action = "http://brzeszczot.net/open/PlayWord";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__PlayWord._id = _id;
	soap_tmp_ns1__PlayWord._value = _value;
	soap_tmp_ns1__PlayWord._direction = _direction;
	soap_serializeheader(soap);
	soap_serialize_ns1__PlayWord(soap, &soap_tmp_ns1__PlayWord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__PlayWord(soap, &soap_tmp_ns1__PlayWord, "ns1:PlayWord", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__PlayWord(soap, &soap_tmp_ns1__PlayWord, "ns1:PlayWord", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_4)
		return soap_closesock(soap);
	soap_default_ns1__PlayWordResponse(soap, &_param_4);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__PlayWordResponse(soap, &_param_4, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
