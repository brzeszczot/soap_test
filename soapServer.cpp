/* soapServer.cpp
   Generated by gSOAP 2.8.23 from test.hpp

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.8.23 2015-10-30 14:54:04 GMT")


extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (soap->max_keep_alive > 0 && !--k)
			soap->keep_alive = 0;
#endif
		if (soap_begin_serve(soap))
		{	if (soap->error >= SOAP_STOP)
				continue;
			return soap->error;
		}
		if (soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetComplexType"))
		return soap_serve_ns1__GetComplexType(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:PrintComplexType"))
		return soap_serve_ns1__PrintComplexType(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:ComplexTypeArrayDemo"))
		return soap_serve_ns1__ComplexTypeArrayDemo(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:SayHello"))
		return soap_serve_ns1__SayHello(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:DemoMethod"))
		return soap_serve_ns1__DemoMethod(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__GetComplexType(struct soap *soap)
{	struct ns1__GetComplexType soap_tmp_ns1__GetComplexType;
	struct ns1__GetComplexTypeResponse _param_1;
	soap_default_ns1__GetComplexTypeResponse(soap, &_param_1);
	soap_default_ns1__GetComplexType(soap, &soap_tmp_ns1__GetComplexType);
	if (!soap_get_ns1__GetComplexType(soap, &soap_tmp_ns1__GetComplexType, "ns1:GetComplexType", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__GetComplexType(soap, _param_1);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetComplexTypeResponse(soap, &_param_1);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetComplexTypeResponse(soap, &_param_1, "ns1:GetComplexTypeResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetComplexTypeResponse(soap, &_param_1, "ns1:GetComplexTypeResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__PrintComplexType(struct soap *soap)
{	struct ns1__PrintComplexType soap_tmp_ns1__PrintComplexType;
	struct ns1__PrintComplexTypeResponse soap_tmp_ns1__PrintComplexTypeResponse;
	soap_default_ns1__PrintComplexTypeResponse(soap, &soap_tmp_ns1__PrintComplexTypeResponse);
	soap_default_ns1__PrintComplexType(soap, &soap_tmp_ns1__PrintComplexType);
	if (!soap_get_ns1__PrintComplexType(soap, &soap_tmp_ns1__PrintComplexType, "ns1:PrintComplexType", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__PrintComplexType(soap, soap_tmp_ns1__PrintComplexType.obj, soap_tmp_ns1__PrintComplexTypeResponse.return_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__PrintComplexTypeResponse(soap, &soap_tmp_ns1__PrintComplexTypeResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__PrintComplexTypeResponse(soap, &soap_tmp_ns1__PrintComplexTypeResponse, "ns1:PrintComplexTypeResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__PrintComplexTypeResponse(soap, &soap_tmp_ns1__PrintComplexTypeResponse, "ns1:PrintComplexTypeResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__ComplexTypeArrayDemo(struct soap *soap)
{	struct ns1__ComplexTypeArrayDemo soap_tmp_ns1__ComplexTypeArrayDemo;
	struct ns1__ComplexTypeArrayDemoResponse _param_2;
	soap_default_ns1__ComplexTypeArrayDemoResponse(soap, &_param_2);
	soap_default_ns1__ComplexTypeArrayDemo(soap, &soap_tmp_ns1__ComplexTypeArrayDemo);
	if (!soap_get_ns1__ComplexTypeArrayDemo(soap, &soap_tmp_ns1__ComplexTypeArrayDemo, "ns1:ComplexTypeArrayDemo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__ComplexTypeArrayDemo(soap, soap_tmp_ns1__ComplexTypeArrayDemo.arr, _param_2);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__ComplexTypeArrayDemoResponse(soap, &_param_2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__ComplexTypeArrayDemoResponse(soap, &_param_2, "ns1:ComplexTypeArrayDemoResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__ComplexTypeArrayDemoResponse(soap, &_param_2, "ns1:ComplexTypeArrayDemoResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__SayHello(struct soap *soap)
{	struct ns1__SayHello soap_tmp_ns1__SayHello;
	struct ns1__SayHelloResponse soap_tmp_ns1__SayHelloResponse;
	soap_default_ns1__SayHelloResponse(soap, &soap_tmp_ns1__SayHelloResponse);
	soap_default_ns1__SayHello(soap, &soap_tmp_ns1__SayHello);
	if (!soap_get_ns1__SayHello(soap, &soap_tmp_ns1__SayHello, "ns1:SayHello", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__SayHello(soap, soap_tmp_ns1__SayHello.name, soap_tmp_ns1__SayHelloResponse.return_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__SayHelloResponse(soap, &soap_tmp_ns1__SayHelloResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__SayHelloResponse(soap, &soap_tmp_ns1__SayHelloResponse, "ns1:SayHelloResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__SayHelloResponse(soap, &soap_tmp_ns1__SayHelloResponse, "ns1:SayHelloResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__DemoMethod(struct soap *soap)
{	struct ns1__DemoMethod soap_tmp_ns1__DemoMethod;
	struct ns1__DemoMethodResponse _param_3;
	soap_default_ns1__DemoMethodResponse(soap, &_param_3);
	soap_default_ns1__DemoMethod(soap, &soap_tmp_ns1__DemoMethod);
	if (!soap_get_ns1__DemoMethod(soap, &soap_tmp_ns1__DemoMethod, "ns1:DemoMethod", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__DemoMethod(soap, _param_3);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DemoMethodResponse(soap, &_param_3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DemoMethodResponse(soap, &_param_3, "ns1:DemoMethodResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DemoMethodResponse(soap, &_param_3, "ns1:DemoMethodResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapServer.cpp */
